print("OOXX遊戲開始")
while(p1_f==p2_f){
if(count==9){
print("和局")
break
}else if(count%%2==1){
switch(scan(),
ooxx[1] <- "O",
ooxx[2] <- "O",
ooxx[3] <- "O",
ooxx[4] <- "O",
ooxx[5] <- "O",
ooxx[6] <- "O",
ooxx[7] <- "O",
ooxx[8] <- "O",
ooxx[9] <- "O" )
}else{
switch(scan(),
ooxx[1] <- "X",
ooxx[2] <- "X",
ooxx[3] <- "X",
ooxx[4] <- "X",
ooxx[5] <- "X",
ooxx[6] <- "X",
ooxx[7] <- "X",
ooxx[8] <- "X",
ooxx[9] <- "X" )
}
cat(ooxx[1],"|",ooxx[2],"|",ooxx[3])
cat("\n一","一","一","一\n")
cat(ooxx[4],"|",ooxx[5],"|",ooxx[6])
cat("\n一","一","一","一\n")
cat(ooxx[7],"|",ooxx[8],"|",ooxx[9])
if(count%%2==1){
if(ooxx[1]==ooxx[2]){
if(ooxx[2]==ooxx[3]) p1_f <- 1
}
if(ooxx[4]==ooxx[5]){
if(ooxx[5]==ooxx[6]) p1_f <- 1
}
if(ooxx[7]==ooxx[8]){
if(ooxx[8]==ooxx[9]) p1_f <- 1
}
if(ooxx[1]==ooxx[4]){
if(ooxx[4]==ooxx[7]) p1_f <- 1
}
if(ooxx[2]==ooxx[5]){
if(ooxx[5]==ooxx[8]) p1_f <- 1
}
if(ooxx[3]==ooxx[6]){
if(ooxx[6]==ooxx[9]) p1_f <- 1
}
}else{
if(ooxx[1]==ooxx[2]){
if(ooxx[2]==ooxx[3]) p2_f <- 1
}
if(ooxx[4]==ooxx[5]){
if(ooxx[5]==ooxx[6]) p2_f <- 1
}
if(ooxx[7]==ooxx[8]){
if(ooxx[8]==ooxx[9]) p2_f <- 1
}
if(ooxx[1]==ooxx[4]){
if(ooxx[4]==ooxx[7]) p2_f <- 1
}
if(ooxx[2]==ooxx[5]){
if(ooxx[5]==ooxx[8]) p2_f <- 1
}
if(ooxx[3]==ooxx[6]){
if(ooxx[6]==ooxx[9]) p2_f <- 1
}
}
count <- count + 1
}
if(p1_f==1) print("玩家一獲勝!")
else if(p2_f==1) print("玩家二獲勝!")
if(p1_f==1){
print("玩家一獲勝!")
}else if(p2_f==1) print("玩家二獲勝!")
p1_f <- 0
p2_f <- 0
count <- 1
ooxx <- c(as.character(seq(from =1, to=9, by=1)))
print("OOXX遊戲開始")
while(p1_f==p2_f){
if(count==9){
print("和局")
break
}else if(count%%2==1){
switch(scan(),
ooxx[1] <- "O",
ooxx[2] <- "O",
ooxx[3] <- "O",
ooxx[4] <- "O",
ooxx[5] <- "O",
ooxx[6] <- "O",
ooxx[7] <- "O",
ooxx[8] <- "O",
ooxx[9] <- "O" )
}else{
switch(scan(),
ooxx[1] <- "X",
ooxx[2] <- "X",
ooxx[3] <- "X",
ooxx[4] <- "X",
ooxx[5] <- "X",
ooxx[6] <- "X",
ooxx[7] <- "X",
ooxx[8] <- "X",
ooxx[9] <- "X" )
}
cat(ooxx[1],"|",ooxx[2],"|",ooxx[3])
cat("\n一","一","一","一\n")
cat(ooxx[4],"|",ooxx[5],"|",ooxx[6])
cat("\n一","一","一","一\n")
cat(ooxx[7],"|",ooxx[8],"|",ooxx[9])
if(count%%2==1){
if(ooxx[1]==ooxx[2]){
if(ooxx[2]==ooxx[3]) p1_f <- 1
}
if(ooxx[4]==ooxx[5]){
if(ooxx[5]==ooxx[6]) p1_f <- 1
}
if(ooxx[7]==ooxx[8]){
if(ooxx[8]==ooxx[9]) p1_f <- 1
}
if(ooxx[1]==ooxx[4]){
if(ooxx[4]==ooxx[7]) p1_f <- 1
}
if(ooxx[2]==ooxx[5]){
if(ooxx[5]==ooxx[8]) p1_f <- 1
}
if(ooxx[3]==ooxx[6]){
if(ooxx[6]==ooxx[9]) p1_f <- 1
}
if(ooxx[1]==ooxx[5]){
if(ooxx[5]==ooxx[9]) p1_f <- 1
}
if(ooxx[3]==ooxx[5]){
if(ooxx[5]==ooxx[7]) p1_f <- 1
}
}else{
if(ooxx[1]==ooxx[2]){
if(ooxx[2]==ooxx[3]) p2_f <- 1
}
if(ooxx[4]==ooxx[5]){
if(ooxx[5]==ooxx[6]) p2_f <- 1
}
if(ooxx[7]==ooxx[8]){
if(ooxx[8]==ooxx[9]) p2_f <- 1
}
if(ooxx[1]==ooxx[4]){
if(ooxx[4]==ooxx[7]) p2_f <- 1
}
if(ooxx[2]==ooxx[5]){
if(ooxx[5]==ooxx[8]) p2_f <- 1
}
if(ooxx[3]==ooxx[6]){
if(ooxx[6]==ooxx[9]) p2_f <- 1
}
if(ooxx[1]==ooxx[5]){
if(ooxx[5]==ooxx[9]) p2_f <- 1
}
if(ooxx[3]==ooxx[5]){
if(ooxx[5]==ooxx[7]) p2_f <- 1
}
}
count <- count + 1
}
}else if(p2_f==1) print("玩家二獲勝!")
p1_f <- 0
p2_f <- 0
count <- 1
ooxx <- c(as.character(seq(from =1, to=9, by=1)))
print("OOXX遊戲開始")
while(p1_f==p2_f){
if(count==9){
print("和局")
break
}else if(count%%2==1){
switch(scan(),
ooxx[1] <- "O",
ooxx[2] <- "O",
ooxx[3] <- "O",
ooxx[4] <- "O",
ooxx[5] <- "O",
ooxx[6] <- "O",
ooxx[7] <- "O",
ooxx[8] <- "O",
ooxx[9] <- "O" )
}else{
switch(scan(),
ooxx[1] <- "X",
ooxx[2] <- "X",
ooxx[3] <- "X",
ooxx[4] <- "X",
ooxx[5] <- "X",
ooxx[6] <- "X",
ooxx[7] <- "X",
ooxx[8] <- "X",
ooxx[9] <- "X" )
}
cat(ooxx[1],"|",ooxx[2],"|",ooxx[3])
cat("\n一","一","一","一\n")
cat(ooxx[4],"|",ooxx[5],"|",ooxx[6])
cat("\n一","一","一","一\n")
cat(ooxx[7],"|",ooxx[8],"|",ooxx[9])
if(count%%2==1){
if(ooxx[1]==ooxx[2]){
if(ooxx[2]==ooxx[3]) p1_f <- 1
}
if(ooxx[4]==ooxx[5]){
if(ooxx[5]==ooxx[6]) p1_f <- 1
}
if(ooxx[7]==ooxx[8]){
if(ooxx[8]==ooxx[9]) p1_f <- 1
}
if(ooxx[1]==ooxx[4]){
if(ooxx[4]==ooxx[7]) p1_f <- 1
}
if(ooxx[2]==ooxx[5]){
if(ooxx[5]==ooxx[8]) p1_f <- 1
}
if(ooxx[3]==ooxx[6]){
if(ooxx[6]==ooxx[9]) p1_f <- 1
}
if(ooxx[1]==ooxx[5]){
if(ooxx[5]==ooxx[9]) p1_f <- 1
}
if(ooxx[3]==ooxx[5]){
if(ooxx[5]==ooxx[7]) p1_f <- 1
}
}else{
if(ooxx[1]==ooxx[2]){
if(ooxx[2]==ooxx[3]) p2_f <- 1
}
if(ooxx[4]==ooxx[5]){
if(ooxx[5]==ooxx[6]) p2_f <- 1
}
if(ooxx[7]==ooxx[8]){
if(ooxx[8]==ooxx[9]) p2_f <- 1
}
if(ooxx[1]==ooxx[4]){
if(ooxx[4]==ooxx[7]) p2_f <- 1
}
if(ooxx[2]==ooxx[5]){
if(ooxx[5]==ooxx[8]) p2_f <- 1
}
if(ooxx[3]==ooxx[6]){
if(ooxx[6]==ooxx[9]) p2_f <- 1
}
if(ooxx[1]==ooxx[5]){
if(ooxx[5]==ooxx[9]) p2_f <- 1
}
if(ooxx[3]==ooxx[5]){
if(ooxx[5]==ooxx[7]) p2_f <- 1
}
}
count <- count + 1
}
if(p1_f==1){
print("玩家一獲勝!")
} else if(p2_f==1) print("玩家二獲勝!")
source('~/GitHub/R-mumi/week_1/hw_1/hw_1_guess_number.R', encoding = 'UTF-8')
ans <- as.character(c(sample(0:9,size=4)))
count <- 0
a <- 0
b <- 0
bad_result <- FALSE
good_result <- TRUE
while(a<4){
a <- 0
b <- 0
guess <- readline("請輸入一四位數:")
guess <- substring(guess, 1:4, 1:4)
if(unique(good_result) %in% unique(duplicated(guess))) result1 <- TRUE
dit <- c(as.character(seq(from =0, to=9, by=1))) #創造一個1~10的string向量
result <- unique(guess) %in% unique(dit)         #將輸入值中是數字的轉成true不是數字則為false
result <- unique(bad_result) %in% unique(result) #如果結果中有至少一個false則進入迴圈直到數入全為數字
while(result | result1){
print("輸入的並非數字或數字重複囉~請重新輸入一四位數~")
guess <- readline("請輸入一四位數:")
abc <- duplicated(guess)
if(unique(good_result) %in% unique(duplicated(guess))) result1 <- TRUE
else result1 <- FALSE
guess <- substring(guess, 1:4, 1:4)
result <- unique(guess) %in% unique(dit)
result <- unique(bad_result) %in% unique(result)
}
count <- count+1
for(i in 1:4){
for(j in 1:4){
if(ans[i]==guess[i]){
a <- a+1
guess[i] <- "+"
break
} else if(ans[i]==guess[j]){
b <- b+1
guess[j] <- "+"
break
}
}
}
cat("本次結果為: ",a, "A", b, "B")
}
ans <- as.character(c(sample(0:9,size=4)))
count <- 0
a <- 0
b <- 0
bad_result <- FALSE
good_result <- TRUE
while(a<4){
a <- 0
b <- 0
guess <- readline("請輸入一四位數:")
guess <- substring(guess, 1:4, 1:4)
if(unique(good_result) %in% unique(duplicated(guess))) result1 <- TRUE
dit <- c(as.character(seq(from =0, to=9, by=1))) #創造一個1~10的string向量
result <- unique(guess) %in% unique(dit)         #將輸入值中是數字的轉成true不是數字則為false
result <- unique(bad_result) %in% unique(result) #如果結果中有至少一個false則進入迴圈直到數入全為數字
while(result | result1){
print("輸入的並非數字或數字重複囉~請重新輸入一四位數~")
guess <- readline("請輸入一四位數:")
if(unique(good_result) %in% unique(duplicated(guess))) result1 <- TRUE
else result1 <- FALSE
guess <- substring(guess, 1:4, 1:4)
result <- unique(guess) %in% unique(dit)
result <- unique(bad_result) %in% unique(result)
}
count <- count+1
for(i in 1:4){
for(j in 1:4){
if(ans[i]==guess[i]){
a <- a+1
guess[i] <- "+"
break
} else if(ans[i]==guess[j]){
b <- b+1
guess[j] <- "+"
break
}
}
}
cat("本次結果為: ",a, "A", b, "B")
}
ans <- as.character(c(sample(0:9,size=4)))
count <- 0
a <- 0
b <- 0
bad_result <- FALSE
good_result <- TRUE
while(a<4){
a <- 0
b <- 0
guess <- readline("請輸入一四位數:")
guess <- substring(guess, 1:4, 1:4)
if(unique(good_result) %in% unique(duplicated(guess))) result1 <- TRUE
else result1 <- FALSE
dit <- c(as.character(seq(from =0, to=9, by=1))) #創造一個1~10的string向量
result <- unique(guess) %in% unique(dit)         #將輸入值中是數字的轉成true不是數字則為false
result <- unique(bad_result) %in% unique(result) #如果結果中有至少一個false則進入迴圈直到數入全為數字
while(result | result1){
print("輸入的並非數字或數字重複囉~請重新輸入一四位數~")
guess <- readline("請輸入一四位數:")
if(unique(good_result) %in% unique(duplicated(guess))) result1 <- TRUE
else result1 <- FALSE
guess <- substring(guess, 1:4, 1:4)
result <- unique(guess) %in% unique(dit)
result <- unique(bad_result) %in% unique(result)
}
count <- count+1
for(i in 1:4){
for(j in 1:4){
if(ans[i]==guess[i]){
a <- a+1
guess[i] <- "+"
break
} else if(ans[i]==guess[j]){
b <- b+1
guess[j] <- "+"
break
}
}
}
cat("本次結果為: ",a, "A", b, "B")
}
ans <- as.character(c(sample(0:9,size=4)))
count <- 0
a <- 0
b <- 0
bad_result <- FALSE
good_result <- TRUE
while(a<4){
a <- 0
b <- 0
guess <- readline("請輸入一四位數:")
guess <- substring(guess, 1:4, 1:4)
if(unique(good_result) %in% unique(duplicated(guess))) result1 <- TRUE
dit <- c(as.character(seq(from =0, to=9, by=1))) #創造一個1~10的string向量
result <- unique(guess) %in% unique(dit)         #將輸入值中是數字的轉成true不是數字則為false
result <- unique(bad_result) %in% unique(result) #如果結果中有至少一個false則進入迴圈直到數入全為數字
while(result | result1){
print("輸入的並非數字或數字重複囉~請重新輸入一四位數~")
guess <- readline("請輸入一四位數:")
guess <- substring(guess, 1:4, 1:4)
if(unique(good_result) %in% unique(duplicated(guess))) result1 <- TRUE
else result1 <- FALSE
result <- unique(guess) %in% unique(dit)
result <- unique(bad_result) %in% unique(result)
}
count <- count+1
for(i in 1:4){
for(j in 1:4){
if(ans[i]==guess[i]){
a <- a+1
guess[i] <- "+"
break
} else if(ans[i]==guess[j]){
b <- b+1
guess[j] <- "+"
break
}
}
}
cat("本次結果為: ",a, "A", b, "B")
}
ans <- as.character(c(sample(0:9,size=4)))
count <- 0
a <- 0
b <- 0
bad_result <- FALSE
good_result <- TRUE
while(a<4){
a <- 0
b <- 0
guess <- readline("請輸入一四位數:")
guess <- substring(guess, 1:4, 1:4)
if(unique(good_result) %in% unique(duplicated(guess))) result1 <- TRUE
dit <- c(as.character(seq(from =0, to=9, by=1))) #創造一個1~10的string向量
result <- unique(guess) %in% unique(dit)         #將輸入值中是數字的轉成true不是數字則為false
result <- unique(bad_result) %in% unique(result) #如果結果中有至少一個false則進入迴圈直到數入全為數字
while(result | result1){
print("輸入的並非數字或數字重複囉~請重新輸入一四位數~")
guess <- readline("請輸入一四位數:")
guess <- substring(guess, 1:4, 1:4)
if(unique(good_result) %in% unique(duplicated(guess))) result1 <- TRUE
else result1 <- FALSE
result <- unique(guess) %in% unique(dit)
result <- unique(bad_result) %in% unique(result)
}
count <- count+1
for(i in 1:4){
for(j in 1:4){
if(ans[i]==guess[i]){
a <- a+1
guess[i] <- "+"
break
} else if(ans[i]==guess[j]){
b <- b+1
guess[j] <- "+"
break
}
}
}
cat("本次結果為: ",a, "A", b, "B")
}
# 猜數字遊戲
# 基本功能
# 1. 請寫一個由"電腦隨機產生"不同數字的四位數(1A2B遊戲)
# 2. 玩家可"重覆"猜電腦所產生的數字，並提示猜測的結果(EX:1A2B)
# 3. 一旦猜對，系統可自動計算玩家猜測的次數
# 額外功能：每次玩家輸入完四個數字後，檢查玩家的輸入是否正確(錯誤檢查)
ans <- as.character(c(sample(0:9,size=4)))
count <- 0
a <- 0
b <- 0
bad_result <- FALSE
good_result <- TRUE
while(a<4){
a <- 0
b <- 0
guess <- readline("請輸入一四位數:")
guess <- substring(guess, 1:4, 1:4)
if(unique(good_result) %in% unique(duplicated(guess))) result1 <- TRUE
dit <- c(as.character(seq(from =0, to=9, by=1))) #創造一個1~10的string向量
result <- unique(guess) %in% unique(dit)         #將輸入值中是數字的轉成true不是數字則為false
result <- unique(bad_result) %in% unique(result) #如果結果中有至少一個false則進入迴圈直到數入全為數字
while(result | result1){
print("輸入的並非數字或數字重複囉~請重新輸入一四位數~")
guess <- readline("請輸入一四位數:")
guess <- substring(guess, 1:4, 1:4)
if(unique(good_result) %in% unique(duplicated(guess))) result1 <- TRUE
else result1 <- FALSE
result <- unique(guess) %in% unique(dit)
result <- unique(bad_result) %in% unique(result)
}
count <- count+1
for(i in 1:4){
for(j in 1:4){
if(ans[i]==guess[i]){
a <- a+1
guess[i] <- "+"
break
} else if(ans[i]==guess[j]){
b <- b+1
guess[j] <- "+"
break
}
}
}
cat("本次結果為: ",a, "A", b, "B")
}
